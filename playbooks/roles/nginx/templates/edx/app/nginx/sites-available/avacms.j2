#
# {{ ansible_managed }}
#

upstream ava-backend {
    {% for host in nginx_avacms_gunicorn_hosts %}
        server {{ host }}:{{ avacms_gunicorn_port }} fail_timeout=0;
    {% endfor %}
}
server {
  listen 443;
  server_name {{ AVA_DOMAIN }};
  return 301 https://www.{{ AVA_DOMAIN }}$request_uri;
}

server {

  # AVACMS configuration file for nginx, templated by ansible
  server_name www.{{ AVA_DOMAIN }};
  listen 80;
  listen 443;

  ssl_certificate /etc/ssl/certs/{{ NGINX_SSL_CERTIFICATE|basename }};
  ssl_certificate_key /etc/ssl/private/{{ NGINX_SSL_KEY|basename }};
  # request the browser to use SSL for all connections
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

  # Nginx does not support nested condition or or conditions so
  # there is an unfortunate mix of conditonals here.
  {% if NGINX_REDIRECT_TO_HTTPS %}
     {% if NGINX_HTTPS_REDIRECT_STRATEGY == "scheme" %}
  # Redirect http to https over single instance
  if ($scheme != "https")
  {
    set $do_redirect_to_https "true";
  }
    {% elif NGINX_HTTPS_REDIRECT_STRATEGY == "forward_for_proto" %}

  # Forward to HTTPS if we're an HTTP request... and the server is behind ELB
  if ($http_x_forwarded_proto = "http")
  {
   set $do_redirect_to_https "true";
  }
  {% endif %}
  # Execute the actual redirect
  if ($do_redirect_to_https = "true")
  {
    return 301 https://$host$request_uri;
  }
  {% endif %}

  location ~ ^/static/(?P<file>.*) {
    root {{ COMMON_DATA_DIR }}/{{ avacms_service_name }};
    try_files /staticfiles/$file =404;
  }

  location ~ ^/media/(?P<file>.*) {
    root {{ avacms_code_dir }};
    try_files /media/$file =404;
  }

  access_log {{ nginx_log_dir }}/access.log {{ NGINX_LOG_FORMAT_NAME }};
  error_log {{ nginx_log_dir }}/error.log error;

  client_max_body_size 4M;

  location @proxy_to_avacms_app {
    {% if NGINX_SET_X_FORWARDED_HEADERS %}
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-For $remote_addr;
    {% else %}
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_set_header X-Forwarded-Port $http_x_forwarded_port;
    proxy_set_header X-Forwarded-For $http_x_forwarded_for;
    {% endif %}
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://ava-backend;
  }

  location / {
    try_files $uri @proxy_to_avacms_app;
  }
}
