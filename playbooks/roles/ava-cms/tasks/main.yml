---

- name: create application user
  user: >
    name="{{ avacms_user }}"
    home="{{ avacms_home }}"
    createhome=yes
    shell=/bin/false
    generate_ssh_key=yes
  tags:
    - install
    - install:base

# Ensure the directory is accessible to the web service
- name: set avacms app dir permissions
  file: >
    path="{{ avacms_home }}"
    state=directory
    owner="{{ avacms_user }}"
    group="{{ common_web_group }}"
  tags:
    - install
    - install:base

- name: setup the avacms env
  template: >
    src=edx/app/avacms/avacms_env.j2
    dest={{ avacms_home }}/avacms_env
    owner={{ avacms_user }}
    group={{ common_web_user }}
    mode=0644
  tags:
    - install
    - install:base

- name: "add gunicorn configuration file"
  template: >
    src=edx/app/avacms/avacms_gunicorn.py.j2
    dest={{ avacms_home }}/avacms_gunicorn.py
  sudo_user: "{{ avacms_user }}"

- name: checkout ava-cms repo into {{ avacms_code_dir }}
  git_2_0_1: >
    dest={{ avacms_code_dir }}
    repo={{ AVACMS_REPO }}
    version={{ AVACMS_VERSION }}
    accept_hostkey=yes
  sudo_user: "{{ avacms_user }}"
  environment:
    GIT_SSH: "{{ avacms_git_ssh }}"
  register: avacms_platform_checkout
  tags:
    - install
    - install:code

# setup media directory and make it accessible to web
- name: set app media dir permissions
  file: >
    path="{{ avacms_code_dir }}/media"
    state=directory
    owner="{{ avacms_user }}"
    group="{{ common_web_group }}"
    mode=0775
  when: not devstack

- name: install application requirements
  pip: >
    requirements="{{ avacms_requirements_base }}/{{ item }}"
    virtualenv="{{ avacms_venv_dir }}"
    state=present
  sudo_user: "{{ avacms_user }}"
  with_items: avacms_requirements

- name: migrate
  shell: >
    chdir={{ avacms_code_dir }}
    DB_MIGRATION_USER='{{ AVACMS_DB_USER }}'
    DB_MIGRATION_PASS='{{ AVACMS_DB_PASS }}'
    {{ avacms_venv_dir }}/bin/python ./manage.py migrate --noinput
  sudo_user: "{{ avacms_user }}"
  environment: "{{ avacms_environment }}"
  when: not devstack and migrate_db is defined and migrate_db|lower == "yes"

- name: run collectstatic
  shell: >
    chdir={{ avacms_code_dir }}
    {{ avacms_venv_dir }}/bin/python manage.py {{ item }}
  sudo_user: "{{ avacms_user }}"
  environment: "{{ avacms_environment }}"
  with_items:
    - "collectstatic --noinput"
  when: not devstack

- name: write out the supervisor wrapper
  template: >
    src=edx/app/avacms/avacms.sh.j2
    dest={{ avacms_home }}/{{ avacms_service_name }}.sh
    mode=0650 owner={{ supervisor_user }} group={{ common_web_user }}

- name: write supervisord config
  template: >
    src=edx/app/supervisor/conf.d.available/avacms.conf.j2
    dest="{{ supervisor_available_dir }}/{{ avacms_service_name }}.conf"
    owner={{ supervisor_user }} group={{ common_web_user }} mode=0644

- name: enable supervisor script
  file: >
    src={{ supervisor_available_dir }}/{{ avacms_service_name }}.conf
    dest={{ supervisor_cfg_dir }}/{{ avacms_service_name }}.conf
    state=link
    force=yes
  when: not disable_edx_services

- name: create symlinks from the rvenv bin dir
  file: >
    src="{{ avacms_venv_dir }}/bin/{{ item }}"
    dest="{{ COMMON_BIN_DIR }}/{{ item.split('.')[0] }}.avacms"
    state=link
  with_items:
  - python
  - pip
  - django-admin.py

- name: create symlinks from the repo dir
  file: >
    src="{{ avacms_code_dir }}/{{ item }}"
    dest="{{ COMMON_BIN_DIR }}/{{ item.split('.')[0] }}.avacms"
    state=link
  with_items:
  - manage.py

- name: update supervisor configuration
  shell: "{{ supervisor_ctl }} -c {{ supervisor_cfg }} update"
  when: not disable_edx_services

- name: restart the applicaton
  supervisorctl: >
    state=restarted
    supervisorctl_path={{ supervisor_ctl }}
    config={{ supervisor_cfg }}
    name={{ avacms_service_name }}
  when: not disable_edx_services
  sudo_user: "{{ supervisor_service_user }}"
